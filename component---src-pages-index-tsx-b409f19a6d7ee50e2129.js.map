{"version":3,"sources":["webpack:///./../src/ui/Card.React.tsx","webpack:///./../src/ui/Section.React.tsx","webpack:///./../src/ui/SectionTitle.React.tsx","webpack:///./../src/components/Contact.React.tsx","webpack:///./../src/components/Footer.React.tsx","webpack:///./../src/components/Introduction.React.tsx","webpack:///./../src/components/Navigation.React.tsx","webpack:///./../src/components/Layout.React.tsx","webpack:///./../src/ui/ClientInformation.React.tsx","webpack:///./../src/components/PastClients.React.tsx","webpack:///./../src/pages/Homepage.React.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Card","_ref","children","additionalClasses","react","className","Section","bgClass","isFullHeight","SectionTitle","Contact","Section_React_Section","SectionTitle_React_SectionTitle","Card_React_Card","href","Footer","Introduction","Navigation","_React$Component","props","_this","call","this","state","isOpen","inheritsLoose_default","_proto","prototype","toggleHandler","_this2","setState","render","React","Layout","Navigation_React_Navigation","ClientInformation","image","imagePosition","name","stack","src","map","tech","index","key","PastClients","ClientInformation_React_ClientInformation","Homepage","Layout_React_Layout","Introduction_React_Introduction","PastClients_React_PastClients","Contact_React_Contact","Footer_React_Footer","indexPageQuery","IndexPage","Homepage_React_Homepage","dP","__webpack_require__","f","FProto","Function","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-index-tsx-b409f19a6d7ee50e2129.js","sourcesContent":["import * as React from 'react';\r\nimport './Card.scss';\r\n\r\ninterface CardProps {\r\n  children?: any;\r\n  additionalClasses?: string;\r\n}\r\n\r\nexport const Card: React.SFC<CardProps> = ({children, additionalClasses}) => {\r\n  return (\r\n    <div className={`card ${additionalClasses}`}>\r\n      { children }\r\n    </div>\r\n  );\r\n};","import * as React from 'react';\r\nimport { SectionTitle } from '../ui/SectionTitle.React';\r\nimport './Section.scss';\r\n\r\ninterface SectionProps {\r\n  children?: any;\r\n  bgClass?: string;\r\n  isFullHeight?: boolean;\r\n}\r\n\r\nexport const Section: React.SFC<SectionProps> = ({children, bgClass, isFullHeight}) => {\r\n\r\n  return (\r\n    <section className={`section full-height-${!!isFullHeight}`}>\r\n      <div className={`section-container ${bgClass}`}>\r\n        { children }\r\n      </div>\r\n    </section>\r\n  );\r\n};","import * as React from 'react';\r\nimport './SectionTitle.scss';\r\n\r\ninterface SectionTitleProps {\r\n  children: string;\r\n}\r\n\r\nexport const SectionTitle: React.SFC<SectionTitleProps> = ({ children }) => {\r\n  return (\r\n    <h2 className='section-title'>{ children }</h2>\r\n  );\r\n};","import * as React from 'react';\r\nimport { Card } from '../ui/Card.React';\r\nimport { Section } from '../ui/Section.React';\r\nimport { SectionTitle } from '../ui/SectionTitle.React';\r\nimport './Contact.scss';\r\n\r\ninterface ContactProps {}\r\n\r\nexport const Contact: React.SFC<ContactProps> = () => {\r\n  return (\r\n    <Section bgClass='contact'>\r\n      <div className='contact-container'>\r\n        <div className='contact-title'>\r\n          <SectionTitle>Get in Touch</SectionTitle>\r\n        </div>\r\n        <div className='contact-information'>\r\n          <Card additionalClasses='contact-card'>\r\n            <p>\r\n              <span className='contact-card-details'>It's easiest to reach us by email</span>\r\n            </p>\r\n            <p>\r\n              <span className='contact-card-email'>\r\n                <a href='mailto:info@jupio.media'>\r\n                  info@jupio.media\r\n                </a>\r\n              </span>\r\n            </p>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </Section>\r\n  );\r\n};","import * as React from 'react';\r\nimport { Card } from '../ui/Card.React';\r\nimport { Section } from '../ui/Section.React';\r\nimport { SectionTitle } from '../ui/SectionTitle.React';\r\nimport './Footer.scss';\r\n\r\ninterface FooterProps {}\r\n\r\nexport const Footer: React.SFC<FooterProps> = () => {\r\n  return (\r\n    <Section bgClass='footer'>\r\n      <div className='footer-overlay'>\r\n        <div className='footer-content'>\r\n          <p className='footer-text'>Made with locally sourced, handcrafted, artisanal code, from a Toronto-based Company.</p>\r\n          <p className='footer-text'>Â© Jupio Media Inc.</p>\r\n        </div>\r\n      </div>\r\n    </Section>\r\n  );\r\n};","import * as React from 'react';\r\nimport { Section } from '../ui/Section.React';\r\nimport { SectionTitle } from '../ui/SectionTitle.React';\r\nimport './Introduction.scss';\r\n\r\ninterface IntroductionProps {}\r\n\r\nexport const Introduction: React.SFC<IntroductionProps> = () => {\r\n  return (\r\n    <Section bgClass='intro-background' isFullHeight={true}>\r\n      <div className='intro-description'>\r\n        <div className='intro-box'>\r\n          <div className='intro-title'>\r\n            <SectionTitle>Your Innovation Partner</SectionTitle>\r\n          </div>\r\n          <div className='intro-text'>\r\n            At Jupio Labs we bring our clients to the\r\n            modern web, using agile & lean approaches\r\n            to development and design\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section>\r\n  );\r\n};","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Hamburger } from '../ui/Hamburger.React';\r\nimport './Navigation.scss';\r\n\r\ninterface NavigationProps {}\r\n\r\n// export const Navigation: React.SFC<NavigationProps> = ({ isOpen }) => {\r\n\r\n//   const clickHandler = () => { return; };\r\n//   const openClass: string = isOpen ? 'open' : '';\r\n\r\n//   return (\r\n\r\n//   );\r\n// };\r\n\r\ninterface NavigationState {\r\n  isOpen: boolean;\r\n}\r\n\r\nexport class Navigation extends React.Component<NavigationProps, NavigationState> {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  private toggleHandler () {\r\n    return () => {\r\n      this.setState({isOpen: !this.state.isOpen });\r\n    };\r\n  }\r\n\r\n  render () {\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <nav className={`navigation ${ isOpen ? 'open' : '' }`}>\r\n      {/* <div className='fixed-hamburger'>\r\n        <Hamburger clickHandler={this.toggleHandler()} />\r\n      </div>\r\n      <div className='diamond-shape' /> */}\r\n      <h1 className='jupio-wordmark'>\r\n        JUPIO LABS\r\n      </h1>\r\n    </nav>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport { Introduction } from '../components/Introduction.React';\r\nimport { Services } from '../components/Services.React';\r\nimport { Hamburger } from '../ui/Hamburger.React';\r\nimport './Layout.scss';\r\nimport { Navigation } from './Navigation.React';\r\n\r\ninterface LayoutProps {\r\n  children?: any;\r\n}\r\n\r\nexport const Layout: React.SFC<LayoutProps> = ({ children }) => {\r\n\r\n  const clickHandler = () => { return; };\r\n  const isOpen: boolean = false;\r\n  const openClass: string = isOpen ? 'open' : '';\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <Navigation />\r\n      { children }\r\n    </div>\r\n\r\n  );\r\n};","import * as React from 'react';\r\nimport './ClientInformation.scss';\r\n\r\ninterface ClientInformationProps {\r\n  image: string;\r\n  imagePosition: string;\r\n  stack: string[];\r\n  name: string;\r\n  children: any;\r\n}\r\n\r\nexport const ClientInformation: React.SFC<ClientInformationProps> = ({ image, imagePosition, name, stack, children }) => {\r\n  return (\r\n   <div className={`client-info ${imagePosition}`}>\r\n    <div className='client-info-content'>\r\n      <div className='client-info-image'>\r\n        <img src={image} />\r\n      </div>\r\n      <h3>{ name }</h3>\r\n      <div className='client-info-stack'>\r\n        {\r\n          stack.map((tech, index) => {\r\n            return (\r\n              <span key={`stack-item-${index}`} className='client-info-technology'>{tech}</span>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n      { children }\r\n    </div>\r\n   </div>\r\n  );\r\n};","import * as React from 'react';\r\nimport { ClientInformation } from '../ui/ClientInformation.React';\r\nimport { Section } from '../ui/Section.React';\r\nimport { SectionTitle } from '../ui/SectionTitle.React';\r\nimport './PastClients.scss';\r\n\r\ninterface PastClientsProps {}\r\n\r\nexport const PastClients: React.SFC<PastClientsProps> = () => {\r\n  return (\r\n    <Section bgClass='past-clients'>\r\n      <div className='past-clients-container'>\r\n        <div className='past-clients-title'>\r\n          <SectionTitle>Past Clients</SectionTitle>\r\n        </div>\r\n        <div className='past-clients-information'>\r\n          <ClientInformation\r\n            image='https://i.imgur.com/qH5o1dz.png'\r\n            imagePosition='right'\r\n            stack={[\r\n              'UI Design',\r\n              'Nationbuilder',\r\n              'HTML5',\r\n              'SASS',\r\n              'Bulma',\r\n              'Javascript',\r\n              'Design',\r\n            ]}\r\n            name='Documentary Organization of Canada'\r\n          >\r\n            <h4>The Task</h4>\r\n            <p>\r\n              The Documentary Organization of Canada (DocOrg) approached us\r\n              in late September of 2018 in order\r\n              to bring their website redesign to completion. Much of\r\n              the site was constructed, but they needed\r\n              our expertise with  Nationbuilder as a platform, our design chops,\r\n              and our experience in front end development to bring the redesign to\r\n              a speedy and timely launch slated for the beginning of October.\r\n            </p>\r\n\r\n            <h4>Design & Development</h4>\r\n            <p>\r\n              We worked with existing thematic elements, such as colour scheme,\r\n              as well as the flex box based CSS framework Bulma.\r\n            </p>\r\n            <p>\r\n              We redesigned much of the conent layout, improved readability,\r\n              and improved the typography of blog article pages. In addition,\r\n              we ensured proper rendering and flow of form pages. We gave the\r\n              website a final rundown and polished it before launch.\r\n            </p>\r\n            <p>\r\n              We also provided insight into how the Nationbuilder platform works,\r\n              what its limitations are, and how features within the system could\r\n              be used to ensure dynamic content tied to data in back end administration.\r\n            </p>\r\n            <p>\r\n              Finally, we helped DocOrg figure out how to establish a bilingual nation\r\n              with the existing theme.\r\n            </p>\r\n            <h4>Hand Off & Launch</h4>\r\n            <p>\r\n              Jupio Labs ensured that DocOrg was ready and comfortable\r\n              with the feature sets that were developed while working with us.\r\n            </p>\r\n            <p>\r\n              Furthermore, Nationbuilder is a powerful tool with a rich set of features,\r\n              which is why we worked closely to ensure that our client would be\r\n              able to make the best use of what was available for the context of their\r\n              organization.\r\n            </p>\r\n            <p>\r\n              We worked closely to ensure as smooth a migration as possible for launch.\r\n            </p>\r\n          </ClientInformation>\r\n          <ClientInformation\r\n            image='https://i.imgur.com/c8zi3I2.png'\r\n            imagePosition='right'\r\n            stack={[\r\n              'UI/UX Design',\r\n              'ReactJS',\r\n              'Redux',\r\n              'NodeJS',\r\n              'MongoDB',\r\n              'TypeScript',\r\n              'Server-side Rendering',\r\n              'Test-driven development',\r\n              'Mailchimp API',\r\n              'Paypal',\r\n              'Azure',\r\n            ]}\r\n            name='Linda Jeffrey for Mayor of Brampton'\r\n          >\r\n            <h4>The Task</h4>\r\n            <p>\r\n              The Campaign for Linda Jeffrey for Mayor of Brampton approached us\r\n              looking for a custom solution for a campaign site.\r\n            </p>\r\n            <p>\r\n              The solution needed to be able to handle volunteer signups, voter pledges,\r\n              requests for campaign signs, and donations.\r\n            </p>\r\n            <h4>A Lean Team</h4>\r\n            <p>\r\n              Understanding the task at hand, how quick turnaround needs to be in a competitive\r\n              campaign cycle, and being able to implement features as fast as possible, we chose to embed\r\n              lean development and UX principles into our process.\r\n            </p>\r\n            <p>\r\n              We quickly established a process to handle feature requests. There was one\r\n              member of the team who remained the chief point of contact with the campaign\r\n              at all times, and was able to relay and prioritize implementation of new features\r\n              as requests came in.\r\n            </p>\r\n            <h4>The Stack</h4>\r\n            <p>\r\n              We were running lean, so we started with making sure there was a base level of\r\n              predictability to our codebase. We chose TypeScript as our primary language due to\r\n              its ability to catch type errors at compile time, allowing us to work faster rather\r\n              than worry about variables coming up undefined at runtime. TypeScript was our bread & butter\r\n              whether we were writing browser-side code, or NodeJS microservices. We also had checks and balances\r\n              in the form of githooks that ensured linters, TypeScript compilation, and unit tests\r\n              all gave the green light before a commit.\r\n            </p>\r\n            <p>\r\n              We chose ReactJS with server-side rendering for our front end. React provides us powerful patterns and a functional\r\n              approach to writing our view. We were able to effectively build a framework while building\r\n              features by building our components using the Atomic UI approach -- allowing for maximum reusability. For state management,\r\n              we deferred to Redux whenever necessary.\r\n            </p>\r\n            <p>\r\n              Server side rendering (SSR) was necessary: political campaigns rely on users to share across\r\n              a variety of platforms, and for that to occur predictably we require Facebook, Twitter, and Google's crawlers\r\n              to be able to read static HTML served from a server. Towards this end, we used NextJS as our solution.\r\n            </p>\r\n          </ClientInformation>\r\n        </div>\r\n\r\n      </div>\r\n    </Section>\r\n  );\r\n};","import * as React from 'react';\r\nimport { Contact } from '../components/Contact.React';\r\nimport { Footer } from '../components/Footer.React';\r\nimport { Introduction } from '../components/Introduction.React';\r\nimport { Layout } from '../components/Layout.React';\r\nimport { PastClients } from '../components/PastClients.React';\r\nimport './Homepage.scss';\r\n\r\ninterface HomepageProps {}\r\n\r\nexport const Homepage: React.SFC<HomepageProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <Introduction />\r\n      <PastClients />\r\n      <Contact />\r\n      <Footer />\r\n      {/* <Services /> */}\r\n    </Layout>\r\n  );\r\n};\r\n","import { graphql } from 'gatsby';\r\nimport * as React from 'react';\r\n// import * as styles from './Index.module.scss';\r\nimport './index.scss';\r\nimport '../../../src/scss/global.scss';\r\n\r\nimport { Homepage } from '../.././../src/pages/Homepage.React';\r\n\r\ninterface IndexPageProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        name: string;\r\n        tagline: string;\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport const indexPageQuery = graphql`\r\n  query IndexPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        name\r\n        tagline\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class IndexPage extends React.Component<IndexPageProps, {}> {\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Homepage />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}